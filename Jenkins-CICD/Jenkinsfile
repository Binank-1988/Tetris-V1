pipeline {
    agent any

    tools {
        jdk 'jdk17'
        nodejs 'node16'
    }

    environment {
        SCANNER_HOME = tool 'sonarqube-scanner'
        GIT_REPO_NAME = "Tetris-manifest"
        GIT_USER_NAME = "Binank-1988"
        DOCKER_IMAGE = "binank2000/tetrisv1:latest"
    }

    stages {

        stage('Checkout Infra Repo') {
            steps {
                git branch: 'main', url: 'https://github.com/Binank-1988/TERRAFORM-JENKINS-CICD.git'
            }
        }

        stage('Checkout App Repo') {
            steps {
                git branch: 'main', url: 'https://github.com/Binank-1988/Tetris-V1.git'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''
                        $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectName=Tetrisv1 \
                        -Dsonar.projectKey=Tetrisv1
                    '''
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }
            }
        }

        stage('NPM Install') {
            steps {
                sh 'npm install'
            }
        }

        stage('Trivy FS Scan') {
            steps {
                sh 'trivy fs . > trivyfs.txt'
            }
        }

        stage('OWASP Dependency Check') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit',
                                odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }

        stage('Docker Build and Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        sh """
                            docker build -t tetrisv1 .
                            docker tag tetrisv1 $DOCKER_IMAGE
                            docker push $DOCKER_IMAGE
                        """
                    }
                }
            }
        }

        stage('Trivy Image Scan') {
            steps {
                sh "trivy image $DOCKER_IMAGE > trivyimage.txt"
            }
        }

                        stage('Checkout Infra Repo') {
            steps {
                git branch: 'main', url: 'https://github.com/Binank-1988/Tetris-manifest.git'
            }
        }

        stage('Update Deployment File') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
                          NEW_IMAGE_NAME = "binank2000/tetrisv1:latest"

            // Replace the image name in the deployment.yaml file
            sh "sed -i 's|image: .*|image: $NEW_IMAGE_NAME|' deployment.yml"

                        sh "git config user.email 'binank1987@gmail.com'"
                        sh "git config user.name 'Binank-1987'"
                        sh "git add deployment.yml"
                        sh "git commit -m 'Update deployment image to $DOCKER_IMAGE' || echo 'No changes to commit'"
                        sh "git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main"
                    }
                }
            }
        }
    }
}

    }
}
